lekcja 1

CREATE TABLE postac(
id_postaci INT AUTO_INCREMENT PRIMARY KEY,
nazwa VARCHAR(40),
rodzaj ENUM('wiking','ptak','kobieta'),
data_ur DATE,
wiek INT UNSIGNED);

INSERT INTO postac VALUES
('1','Bjorn','wiking','1984-08-23','38'),
('2','Drozd','ptak','2005-07-21','17'),
('3','Tesciowa','kobieta','1955-05-15','67');

UPDATE postac SET wiek = 88 WHERE nazwa = 'Tesciowa';

UPDATE postac SET data_ur = '1934-05-15' WHERE nazwa = 'Tesciowa';

CREATE TABLE walizka
(id_walizki INT AUTO_INCREMENT PRIMARY KEY,
pojemnosc INT UNSIGNED,
kolor ENUM('rozowy','czerwony','teczowy','zolty'),
id_wlasciciela INT,
FOREIGN KEY(id_wlasciciela) REFERENCES postac(id_postaci) ON DELETE CASCADE);

ALTER TABLE walizka MODIFY kolor ENUM('rozowy','czerwony','teczowy','zolty') DEFAULT 'rozowy';

INSERT INTO walizka VALUES
('1','20',DEFAULT,'2'),
('2','30',DEFAULT,'3');

CREATE TABLE izba(
adres_budynku INT AUTO_INCREMENT,
nazwa_izby VARCHAR(40),
metraz INT UNSIGNED,
wlasciciel INT,
PRIMARY KEY(adres_budynku,nazwa_izby),
FOREIGN KEY(wlasciciel) REFERENCES postac(id_postaci) ON DELETE SET NULL);

ALTER TABLE izba ADD COLUMN kolor_izby VARCHAR(20) DEFAULT 'czarny' AFTER metraz;

INSERT INTO izba VALUES ('1','spizarnia','8',DEFAULT,'1');

CREATE TABLE przetwory(
id_przetworu INT AUTO_INCREMENT PRIMARY KEY,
rok_produkcji YEAR DEFAULT (1654),
id_wykonawcy INT,
zawartosc VARCHAR(50),
dodatek VARCHAR(50) DEFAULT 'papryczka chilli',
id_konsumenta INT,
FOREIGN KEY(id_wykonawcy) REFERENCES postac(id_postaci),
FOREIGN KEY(id_konsumenta) REFERENCES postac(id_postaci)
);

---------------------------zad 5-------------------
INSERT INTO postac VALUES
(4,'Andreas','wiking','1970-01-02',52),
(5,'Daniel','wiking','1968-03-09',54),
(6,'Johann','wiking','1975-08-23',47),
(7,'Sven','wiking','1972-09-11',50),
(8,'Erling','wiking','1959-06-10',63);

CREATE TABLE statek(
nazwa_statku VARCHAR(50) PRIMARY KEY,
rodzaj_statku ENUM('duzy','maly'),
data_wodowania DATE,
max_ladownosc INT UNSIGNED);

INSERT INTO statek VALUES
('statek_1','duzy','2011-11-11',200),
('statek_2','maly','2012-01-12',120);

ALTER TABLE postac ADD COLUMN funkcja VARCHAR(50);

UPDATE postac SET funkcja = 'kapitan' WHERE nazwa = 'Bjorn';

ALTER TABLE postac ADD COLUMN nazwa_statku VARCHAR(50);
ALTER TABLE postac ADD CONSTRAINT FOREIGN KEY(nazwa_statku) REFERENCES statek(nazwa_statku);

UPDATE postac SET nazwa_statku = 'statek_1' WHERE nazwa = 'Bjorn';
UPDATE postac SET nazwa_statku = 'statek_1' WHERE nazwa = 'Drozd';
UPDATE postac SET nazwa_statku = 'statek_1' WHERE nazwa = 'Andreas';
UPDATE postac SET nazwa_statku = 'statek_1' WHERE nazwa = 'Daniel';
UPDATE postac SET nazwa_statku = 'statek_1' WHERE nazwa = 'Johann';
UPDATE postac SET nazwa_statku = 'statek_1' WHERE nazwa = 'Sven';
UPDATE postac SET nazwa_statku = 'statek_1' WHERE nazwa = 'Erling';

DELETE FROM izba WHERE nazwa_izby = 'spizarnia';

DROP TABLE izba;
===================================================================================================
lekcja 2

	zad 1
SELECT * FROM postac WHERE rodzaj = 'wiking' ORDER BY wiek DESC;
DELETE FROM postac WHERE wiek = 63;
DELETE FROM postac WHERE wiek = 54;

ALTER TABLE przetwory DROP FOREIGN KEY przetwory_ibfk_1;
ALTER TABLE przetwory DROP FOREIGN KEY przetwory_ibfk_2;
ALTER TABLE walizka DROP FOREIGN KEY walizka_ibfk_1;
ALTER TABLE postac MODIFY id_postaci INT NOT NULL;
ALTER TABLE postac DROP PRIMARY KEY;

	zad 2
ALTER TABLE postac ADD COLUMN pesel VARCHAR(11);
UPDATE postac SET pesel='01234567890' WHERE id_postaci = 1;
UPDATE postac SET pesel='12345432123' WHERE id_postaci = 2;
UPDATE postac SET pesel='00033322255' WHERE id_postaci = 3;
UPDATE postac SET pesel='00099922255' WHERE id_postaci = 4;
UPDATE postac SET pesel='99099922255' WHERE id_postaci = 6;
UPDATE postac SET pesel='99888892225' WHERE id_postaci = 7;
ALTER TABLE postac ADD CONSTRAINT PRIMARY KEY(pesel);

ALTER TABLE postac MODIFY rodzaj ENUM('kobieta','wiking','ptak','syrena');

INSERT INTO postac VALUES
('5','Gertruda Nieszczera','syrena','1985-06-30','37',NULL,NULL,'65445665456');

	zad 3
UPDATE postac SET nazwa_statku = 'statek_1' WHERE nazwa LIKE '%a%';
UPDATE statek SET max_ladownosc = max_ladownosc * 0.7
WHERE data_wodowania BETWEEN '1901-01-01' AND '2000-12-31';
SELECT IF(wiek > 1000,'tak','nie') FROM postac;

	zad 4
ALTER TABLE postac MODIFY rodzaj ENUM('kobieta','wiking','ptak','syrena','waz');
INSERT INTO postac VALUES
('8','Loko','waz','1949-07-29','73',NULL,NULL,'22223332232');

UPDATE postac SET nazwa_statku = NULL where nazwa = 'Tesciowa';

CREATE TABLE marynarz(
id_postaci INT NOT NULL,
nazwa VARCHAR(40),
rodzaj ENUM('kobieta','wiking','ptak','syrena','waz'),
data_ur DATE,
wiek INT UNSIGNED,
funkcja VARCHAR(50),
nazwa_statku VARCHAR(50),
pesel VARCHAR(11) NOT NULL,
FOREIGN KEY(pesel) REFERENCES postac(pesel) );

INSERT INTO marynarz SELECT * FROM postac WHERE nazwa_statku IS NOT NULL;

	zad 5
UPDATE marynarz SET nazwa_statku = NULL;
UPDATE postac SET nazwa_statku = NULL;
DELETE FROM marynarz WHERE pesel = '99099922255';
DELETE FROM postac WHERE pesel = '99099922255';
DELETE FROM statek WHERE nazwa_statku LIKE '%';
ALTER TABLE postac DROP FOREIGN KEY postac_ibfk_1;
DROP TABLE statek;

CREATE TABLE zwierz AS SELECT * FROM postac;
SELECT * FROM zwierz;
DELETE FROM zwierz WHERE rodzaj = 'kobieta';
DELETE FROM zwierz WHERE rodzaj = 'wiking';
DELETE FROM zwierz WHERE rodzaj = 'syrena';

===================================================================================================
lekcja 3
	zad 1
CREATE TABLE kreatura AS SELECT * FROM wikingowie.kreatura;
CREATE TABLE zasob AS SELECT * FROM wikingowie.zasob;
CREATE TABLE ekwipunek AS SELECT * FROM wikingowie.ekwipunek;
SELECT * FROM zasob;
SELECT * FROM zasob WHERE rodzaj = 'jedzenie';
SELECT idZasobu, ilosc FROM ekwipunek WHERE idKreatury IN(1,3,5);

	zad 2
SELECT * FROM kreatura WHERE udzwig >= 50 AND rodzaj != 'wiedzma';
SELECT * FROM zasob WHERE waga BETWEEN 2 AND 5;
SELECT * FROM kreatura WHERE nazwa LIKE '%or%' AND udzwig BETWEEN 30 AND 70;

	zad 3
SELECT * FROM zasob WHERE dataPozyskania LIKE '%-07-%' OR dataPozyskania LIKE '%-08-%';
SELECT * FROM zasob WHERE rodzaj IS NOT NULL ORDER BY waga ASC;
SELECT * FROM kreatura ORDER BY dataUr ASC LIMIT 5;

	zad 4
SELECT rodzaj FROM zasob GROUP BY rodzaj HAVING COUNT(rodzaj) = 1;
albo;
SELECT DISTINCT rodzaj FROM zasob WHERE rodzaj IS NOT NULL;
(nie wiem o ktore chodzi);

SELECT CONCAT(nazwa,' - ',rodzaj) AS nazwa_i_rodzaj FROM kreatura WHERE rodzaj LIKE 'wi%';
SELECT waga * ilosc AS calkowita_waga FROM zasob
WHERE dataPozyskania BETWEEN '2000-01-01' AND '2007-12-31';

	zad 5
SELECT waga * 0.7 AS waga_netto, waga * 0.3 AS waga_odpadek FROM zasob WHERE rodzaj = 'jedzenie';
SELECT * FROM zasob WHERE rodzaj IS NULL;
SELECT DISTINCT rodzaj, nazwa FROM zasob WHERE nazwa LIKE 'Ba%' OR nazwa LIKE '%os' ORDER BY nazwa;

===================================================================================================
lekcja 4
	zad 1
SELECT AVG(waga) FROM kreatura WHERE rodzaj = 'wiking';
SELECT rodzaj, COUNT(rodzaj) AS ile_rodzaj, AVG(waga) FROM kreatura GROUP BY rodzaj;
SELECT rodzaj, COUNT(rodzaj) AS ile_rodzaj, (SUM(2022 - YEAR(dataUr))) / COUNT(rodzaj) AS avg_wiek
FROM kreatura GROUP BY rodzaj;

	zad 2
SELECT rodzaj, COUNT(rodzaj), SUM(waga) FROM zasob WHERE rodzaj IS NOT NULL GROUP BY rodzaj;
SELECT nazwa, COUNT(nazwa) AS ile_nazwa, SUM(waga * ilosc) AS waga_razem
FROM zasob GROUP BY nazwa HAVING ile_nazwa > 3 AND waga_razem > 10;
SELECT nazwa, ilosc, rodzaj FROM zasob WHERE rodzaj IS NOT NULL GROUP BY rodzaj HAVING ilosc > 1;

	zad 3
SELECT idKreatury, idZasobu, ilosc, SUM(idZasobu * ilosc) FROM ekwipunek GROUP BY idKreatury;
albo;
SELECT kreatura.nazwa, SUM(ekwipunek.ilosc) AS ilosc FROM kreatura INNER JOIN ekwipunek ON kreatura.idKreatury - ekwipunek.idKreatury GROUP BY nazwa;

SELECT kreatura.nazwa FROM kreatura LEFT JOIN ekwipunek ON kreatura.idKreatury WHERE ekwipunek.idKreatury IS NULL;

SELECT kreatura.nazwa FROM kreatura LEFT JOIN ekwipunek ON kreatura.idKreatury = ekwipunek.idKreatury WHERE ekwipunek.idKreatury IS NULL;

	zad 4
SELECT kreatura.nazwa, kreatura.dataUr, ekwipunek.idZasobu, zasob.nazwa FROM kreatura
NATURAL JOIN ekwipunek
INNER JOIN zasob ON ekwipunek.idZasobu = zasob.idZasobu
WHERE kreatura.rodzaj = 'wiking' AND kreatura.dataUr LIKE '167%';
nie wiem czy dobrze ^;

SELECT ekwipunek.idKreatury, ekwipunek.idZasobu, zasob.rodzaj FROM ekwipunek
INNER JOIN zasob ON zasob.idZasobu = ekwipunek.idZasobu AND zasob.rodzaj = 'jedzenie';

SELECT CONCAT(b.nazwa,' - ',a.nazwa) AS id_roznica_5 FROM kreatura a
JOIN kreatura b ON a.idKreatury = b.idKreatury + 5;

	zad 5
SELECT kreatura.rodzaj, AVG(ekwipunek.ilosc * zasob.waga * zasob.ilosc) FROM zasob
INNER JOIN ekwipunek ON zasob.idZasobu = ekwipunek.idZasobu
INNER JOIN kreatura ON ekwipunek.idKreatury = kreatura.idKreatury
WHERE kreatura.rodzaj NOT IN('malpa','waz') AND ekwipunek.ilosc < 30
GROUP BY kreatura.rodzaj;

SELECT kreatura.nazwa, kreatura.dataUr, kreatura.rodzaj FROM kreatura WHERE dataUr = (SELECT MAX(dataUr) FROM kreatura) OR dataUr = (SELECT MIN(dataUr) FROM kreatura);

===================================================================================================
lekcja 5
	zad 1
CREATE TABLE kreatura2 AS SELECT * FROM wikingowie.kreatura;
CREATE TABLE uczestnicy AS SELECT * FROM wikingowie.uczestnicy;
CREATE TABLE etapy_wyprawy AS SELECT * FROM wikingowie.etapy_wyprawy;
CREATE TABLE sektor AS SELECT * FROM wikingowie.sektor;
CREATE TABLE wyprawa AS SELECT * FROM wikingowie.wyprawa;

SELECT kreatura2.idKreatury, kreatura2.nazwa FROM kreatura2
WHERE NOT EXISTS (SELECT * FROM uczestnicy WHERE kreatura2.idKreatury = uczestnicy.id_uczestnika);

SELECT wyprawa.nazwa, SUM(ekwipunek.ilosc) FROM wyprawa
INNER JOIN uczestnicy ON uczestnicy.id_wyprawy = wyprawa.id_wyprawy
INNER JOIN kreatura2 ON kreatura2.idKreatury = uczestnicy.id_uczestnika
INNER JOIN ekwipunek ON ekwipunek.idKreatury = kreatura2.idKreatury
GROUP BY wyprawa.nazwa;

	zad 2
1. dla kazdej wyprawy wypisz jej nazwe, liczbe uczestnikow oraz nazwy tych uczestnikow w jednej linii
2. wypisz kolejne etapy wszystkich wypraw wraz z nazwami sektorow, sortujac najpierw wedlug
   daty poczatku wyprawy, a nastepnie wedlug kolejnosci wystepowania etapow. w kazdym etapie
   okresl nazwe kierownika danej wyprawy
